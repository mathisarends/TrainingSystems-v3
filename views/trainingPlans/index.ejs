<main id="main" class="grid-container grid-container--training flow">
    <h1 class="numbered-title"><span aria-hidden="true">01</span>CUSTOM</h1>

    <div class="tab-list underline-indicators flex" role="tablist" aria-label="destination list"
        style="justify-content: space-between;">
        <button id="custom-tab" aria-selected="false" role="tab" aria-controls="custom-tab"
            class="uppercase ff-sans-cond text-accent letter-spacing-2" tabindex="0">Custom</button>
        <button id="session-tab" aria-selected="false" role="tab" aria-controls="session-tab"
            class="uppercase ff-sans-cond text-accent letter-spacing-2" tabindex="-1">Session</button>
        <button id="template-tab" aria-selected="false" role="tab" aria-controls="template-tab"
            class="uppercase ff-sans-cond text-accent letter-spacing-2" tabindex="-1">Template</button>
        <button id="archive-tab" aria-selected="false" role="tab" aria-controls="archive-tab" tabindex="-1"
        class="uppercase ff-sans-cond text-accent letter-spacing-2">Archiv</button>
    </div>

    <input id="userIdentification" type="hidden" name="userIdentification" value="<%= userID %>">

    <!--Custom Trainings-->
    <section class="custom-view-container flow" style="--flow-space: 2em;">

        <% if (errorCreatingNewCustomTrainingPlan) { %>
            <div class="ff-sans-cond letter-spacing-3 fs-500" style="text-align: center;">
                <%= errorCreatingNewCustomTrainingPlan %>
            </div>
            <% } %>

                <% if (userCustomTrainings.length===0) { %>
                    <div class="no-training-available ff-sans-cond letter-spacing-3 fs-500">
                        <p>
                            Es sieht so aus als hättest du keine gespeicherten Trainingspläne.
                            Erstelle einfach einen mit dem Button unten.
                        </p>
                    </div>
                    <% } %>

                        <div class="training-plan-container flex" style="--gap: 1rem;">
                            <% for (let i=0; i < userCustomTrainings.length; i++) { %>

                                <div class="custom-training-container">
                                    <div style="display: none" class="hidden-index">
                                        <%= i %>
                                    </div>
                                    <input type="text" class="customNextTrainingWeek"
                                        value="<%= customCurrentTrainingWeek[i] %>" style="display: none">
                                    <div class="training-plan-title uppercase">
                                        <%= userCustomTrainings[i].title || "Custom A" %>
                                    </div>
                                    <div class="ff-sans-cond fs-400 letter-spacing-4">
                                        <%= formattedTrainingPlanDates[i] %>
                                    </div>
                                </div>
                                <% } %>
                        </div>



                        <div class="training-button-container">
                            <button class="main-page-button training-plan-button uppercase"
                                id="start-custom-training-button">Trainieren</button>

                                <button class="main-page-button stats-page-button uppercase">Statistics</button>


                            <button class="more-training-options main-page-button training-page-button uppercase letter-spacing-1" style="display: none">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round" class="feather feather-chevrons-down">
                                    <polyline points="7 13 12 18 17 13"></polyline>
                                    <polyline points="7 6 12 11 17 6"></polyline>
                                </svg>
                            </button>

                            <button class="main-page-button edit-training-plan-button uppercase"
                            id="edit-custom-training-button" style="display: none;">Bearbeiten</button>
                            
                            <% for (let i=0; i < userCustomTrainings.length; i++) { %>

                                <form action="/training/archive-training-plan" method="POST"
                                    class="archive-custom-form" style="display: none">
                                    <input type="hidden" value="<%= i %>" name="archiveIndex">
                                    <input type="hidden" value="custom" name="trainingPlanType">
                                    <input type="hidden" class="archiveTitle"
                                        value="<%= userCustomTrainings[i].title %>">
                                    <input type="hidden" name="userIdentification" value="<%= userID %>">
                                    <button class="main-page-button archive-training-plan-button uppercase" type="submit">ARCHIVIEREN</button>
                                </form>
                                <% } %>


                            <% for (let i=0; i < userCustomTrainings.length; i++) { %>

                                <form action="/training/delete-training-plan?_method=DELETE" method="POST"
                                    class="delete-custom-form" style="display: none">
                                    <input type="hidden" value="<%= i %>" name="deleteIndex">
                                    <input type="hidden" value="custom-training" name="trainingPlanType">
                                    <input type="hidden" class="deleteTitle"
                                        value="<%= userCustomTrainings[i].title %>">
                                    <input type="hidden" name="userIdentification" value="<%= userID %>">
                                    <button class="main-page-button uppercase" type="submit">Löschen</button>
                                </form>
                                <% } %>

                        </div>

                        <button class="main-page-button training-page-button uppercase letter-spacing-1"
                            id="createCustomTrainingPlanBTN">
                            Erstellen</button>
    </section>

    <!--Training Sessions-->
    <section class="custom-view-container scratch-view-container flow" hidden>

        <% if (errorCreatingNewCustomTraining) { %>
            <div class="ff-sans-cond letter-spacing-3 fs-500" style="text-align: center;">
                <%= errorCreatingNewCustomTraining %>
            </div>
            <% } %>
                <% if (userTrainings.length===0) { %>
                    <div class="no-training-available ff-sans-cond letter-spacing-3 fs-500">
                        Es sieht so aus als hättest du keine gespeicherten Trainings.
                        Starte eines mit dem Button unten!
                    </div>
                    <% } %>

                        <div class="training-plan-container flex">
                            <% for (let i=0; i < userTrainings.length; i++) { %>

                                <div class="custom-training-container">
                                    <% const plan=userTrainings[i] %>
                                        <div style="display: none" class="hidden-index">
                                            <%= i %>
                                        </div>
                                        <div class="session-title uppercase">
                                            <%= plan.title %>
                                        </div>
                                        <div class="ff-sans-cond fs-400 letter-spacing-4">
                                            <%= trainingFormattedDates[i] %>
                                        </div>
                                </div>


                                <% } %>
                        </div>

                        <div class="training-button-container">
                            <button class="main-page-button training-plan-button uppercase" id="start-session">
                                Trainieren
                            </button>
                            <button class="main-page-button training-plan-button uppercase" id="edit-session">
                                Bearbeiten
                            </button>

                            <button class="main-page-button stats-page-button uppercase" style="display: none">STATS</button>

                            <% for (let i=0; i < userTrainings.length; i++) { %>
                                <form action="/training/delete-training?_method=DELETE" method="POST"
                                    class="delete-form-training" style="display: none">
                                    <input type="hidden" value="<%= i %>" name="deleteIndex">
                                    <input type="hidden" value="session-training" name="trainingPlanType">
                                    <input type="hidden" class="deleteTitle" value="<%= userTrainings[i].title %>">
                                    <input type="hidden" name="userIdentification" value="<%= userID %>">
                                    <button class="main-page-button trainin-plan-button uppercase"
                                        type="submit">Löschen</button>
                                </form>
                                <% } %>
                        </div>

                        <button class="main-page-button training-page-button uppercase letter-spacing-1"
                            id="create-training-btn">
                            Erstellen
                        </button>

    </section>

    <!--Template Pläne-->
    <section class="custom-view-container template-view-container flow" hidden>

        <div class="training-plan-container flex" style="--gap: 1rem">
            <% for (let i=0; i < user.trainingPlanTemplate.length; i++) { %>
                <div class="custom-training-container">
                    <div style="display: none" class="hidden-index">
                        <%= i %>
                    </div>
                    <input type="hidden" class="templateNextTrainingWeek" value="<%= templateCurrentTrainingWeek[i] %>">
                    <div class="training-plan-title uppercase">
                        <% const templateLetters="ABCDEFGHIJKLMNOPQRSTUVWXYZ" ; %>
                            <%= userTemplateTrainings[i].title || ("Template " + templateLetters[i]); %>
                    </div>
                    <div class=" ff-sans-cond fs-400 letter-spacing-4">
                                <%= formattedTemplateTrainingPlanDates[i] %>
                    </div>
                </div>
                <% } %>
        </div>

        <div class="training-button-container">

            <button class="main-page-button training-plan-button uppercase" id="start-template-training-button">
                Trainieren
            </button>

            <button class="main-page-button stats-page-button uppercase">Statistics</button>

            <button class="more-training-options main-page-button training-page-button uppercase letter-spacing-1" style="display: none">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                    stroke-linejoin="round" class="feather feather-chevrons-down">
                    <polyline points="7 13 12 18 17 13"></polyline>
                    <polyline points="7 6 12 11 17 6"></polyline>
                </svg>
            </button>

            <button class="main-page-button edit-training-plan-button uppercase" id="edit-template-training-button" style="display: none;">
                Bearbeiten
            </button>

            <% for (let i=0; i < user.trainingPlanTemplate.length; i++) { %>

                <form action="/training/archive-training-plan" method="POST"
                    class="archive-template-form" style="display: none">
                    <input type="hidden" value="<%= i %>" name="archiveIndex">
                    <input type="hidden" value="template" name="trainingPlanType">
                    <input type="hidden" class="archiveTitle"
                        value="<%= user.trainingPlanTemplate[i].title %>">
                    <input type="hidden" name="userIdentification" value="<%= userID %>">
                    <button class="main-page-button archive-template-training-plan-button uppercase" type="submit">ARCHIVIEREN</button>
                </form>
                <% } %>

            <% for (let i=0; i < user.trainingPlanTemplate.length; i++) { %>
                <form action="/training/reset-template-training?_method=DELETE" method="POST"
                    class="reset-template-training-form" style="display: none;">
                    <input type="hidden" value="<%= i %>" name="resetIndex">
                    <input type="hidden" value="template-training" name="trainingPlanType">
                    <input type="hidden" name="userIdentification" value="<%= userID %>">
                    <button class="main-page-button uppercase" type="submit">RESET</button>
                </form>
                <% } %>
        </div>

    </section>

    <!--Training plan archive -->
    <section class="custom-view-container archive-view-container flow" hidden>

        <% if (archivedPlans.length===0) { %>
            <div class="no-training-available ff-sans-cond letter-spacing-3 fs-500">
                <p>
                    Hier werden deine archivierten Trainingspläne angezeigt. Diesen Text siehst du nur wenn du noch keine hast :)
                </p>
            </div>
            <% } %>

        <div class="training-plan-container flex" style="--gap: 1rem">
            <% for (let i = 0; i < archivedPlans.length; i++) { %>
                <div class="custom-training-container">
                    <div style="display: none" class="hidden-index">
                        <%= i %>
                    </div>
                    <div class="uppercase">
                            <%= archivedPlans[i].title || "Default Title" %>
                    </div>
                    <input type="hidden" value="<%= userID %>" name="userIdentification">
                    <div class=" ff-sans-cond fs-400 letter-spacing-4">
                                <%= formattedArchiveTrainingPlanDates[i] %> - <span class="trainingPlanType uppercase"><%= archivedPlans[i].typeOfPlan %></span> 
                    </div>
                    <% console.log(archivedPlans[i].trainingWeeks[0].id) %>
                    <input type="hidden" class="archive-plan-id" value="<%= archivedPlans[i].id %>">
                </div>
                <% } %>
        </div>



        <div class="training-button-container">

            <button class="main-page-button training-plan-button uppercase">
                ANSCHAUEN
            </button>

            <button class="main-page-button stats-page-button uppercase">Statistics</button>

            <button class="more-training-options main-page-button training-page-button uppercase letter-spacing-1" style_="display: none">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                    stroke-linejoin="round" class="feather feather-chevrons-down">
                    <polyline points="7 13 12 18 17 13"></polyline>
                    <polyline points="7 6 12 11 17 6"></polyline>
                </svg>
            </button>

            <!-- hier optionen: als vorlage oder komplett? -->
            <button id="delete-archived-training" class="main-page-button training-plan-button uppercase" style="display: none">
                LÖSCHEN
            </button>

            <button id="restore-archived-training" class="main-page-button training-plan-button uppercase" style="display: none">
                WIEDERVERWENDEN
            </button>

        </div>
    </section>

    <div id="confirmationModal" class="modal ff-sans-cond text-accent fs-500 letter-spacing-4" style="display: none">
        <div class="modal-content flow" style="--flow-space: 0.5em;">
            <input type="text" readonly value="Training löschen">
            <div id="more-restore-data-container" style="display: none;">
                <select id="keepTrainingData" class="select-restore-bar" name="keepTrainingData">
                    <option selected value="true">Trainingsdaten beibehalten</option>
                    <option value="false">Trainingsdaten (RPE & Weight) entfernen</option>
                </select>
                <select id="keepTrainingArchived" class="select-restore-bar" name="keepTrainingArchived">
                    <option selected value="true">Im Archiv behalten</option>
                    <option value="false">Aus Archiv löschen</option>
                </select>
            </div>
            <div class="modal-buttons">
                <button class="modal-button text-accent" id="confirmResetButton">LÖSCHEN</button>
                <button class="modal-button text-accent" id="cancelResetButton">ABBRECHEN</button>
            </div>
        </div>
    </div>

    <div id="notAccesibleModal" class="modal ff-sans-cond text-accent fs-500 letter-spacing-4" style="display: none">
        <div class="modal-content flow" style="--flow-space: 0.5em;">
            <input type="text" readonly value="Offline Mode Restriced" style="white-space: pre-line;">
            <div class="modal-buttons">
                <button class="modal-button text-accent" id="syncNowButton">SYNC NOW</button>
                <button class="modal-button text-accent" id="cancelSyncButton">CANCEL</button>
            </div>
        </div>
    </div>



</main>


<script src="/javascripts/trainingIndexPage/trainingPlanCategorySelector.js"></script>
<script src="/javascripts/trainingIndexPage/showRightTabFromStart.js"></script>
<script src="/javascripts/trainingIndexPage/showOfflineEditedTrainingNames.js"></script>

<script src="/javascripts/trainingIndexPage/ajaxDelete.js"></script>
<script src="/javascripts/trainingIndexPage/handleCustomRedirects.js"></script>
<script src="/javascripts/trainingIndexPage/handleTemplateRedirects.js"></script>
<script src="/javascripts/trainingIndexPage/handleSessionRedirects.js"></script>

<script src="/javascripts/trainingIndexPage/archiveLogic.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const archiveSection = document.querySelector("section:last-of-type");
        const archivedPlanFields = archiveSection.querySelectorAll(".custom-training-container");
        
        const moreOptionsPerFieldBTN = archiveSection.querySelector(".more-training-options");
        const restoreArchivedTrainingBTN = archiveSection.querySelector("#restore-archived-training");
        const deleteArchivedTrainingBTN = archiveSection.querySelector("#delete-archived-training");

        let lastSelectedArchiveIndex;

        archivedPlanFields.forEach((field, index) => {
            field.addEventListener("click", () => {
                selectArchivedField(index);
            })
        })

        function selectArchivedField(index) {
            archivedPlanFields.forEach((field, i) => {
                field.classList.remove("selected");
            })

            archivedPlanFields[index].classList.add("selected");
            restoreArchivedTrainingBTN.style.display = "none";
            deleteArchivedTrainingBTN.style.display = "none";
            lastSelectedArchiveIndex = index;
            moreOptionsPerFieldBTN.style.display = "block";
        }

        moreOptionsPerFieldBTN.addEventListener("click", () => {

            const currentArchiveField = archivedPlanFields[lastSelectedArchiveIndex];
            const typeOfPlan = currentArchiveField.querySelector(".trainingPlanType").textContent;

            moreOptionsPerFieldBTN.style.display = "none";
            deleteArchivedTrainingBTN.style.display = "block";
            restoreArchivedTrainingBTN.style.display = "block";

            if (typeOfPlan === "template") {
                restoreArchivedTrainingBTN.style.display = "none";
            }
        })

        deleteArchivedTrainingBTN.addEventListener("click", e =>{
            e.preventDefault();
            setupArchiveModal("delete");
        })

        restoreArchivedTrainingBTN.addEventListener("click", e => {
            e.preventDefault();
            setupArchiveModal("restore")
            
        })

        const confirmationModal = document.getElementById("confirmationModal");
        const confirmResetButton = document.getElementById("confirmResetButton");
        const cancelDeleteButton = document.getElementById("cancelResetButton");
        
        

        function setupArchiveModal(mode) {

            const trainingTitle = archivedPlanFields[lastSelectedArchiveIndex].querySelectorAll("div")[1].textContent.trim();

            if (mode === "delete") {
                confirmationModal.querySelector("input").value = `"${trainingTitle.toUpperCase()}" endgültig löschen?`;

                confirmationModal.style.display = "block";

                confirmResetButton.addEventListener("click", e => {
                    e.preventDefault();
                    handleDeleteProcessFromArchive();
                })

            } else if (mode === "restore") {
                confirmationModal.querySelector("input").value = `"${trainingTitle.toUpperCase()}" wiederherstellen?`;
                confirmResetButton.textContent = "BESTÄTIGEN";

                const restoreDataOptionsContainer = document.getElementById("more-restore-data-container");
                restoreDataOptionsContainer.style.display = "block";

                confirmationModal.style.display = "block";

                confirmResetButton.addEventListener("click", e => {
                    e.preventDefault();
                    handleRestoreProcess();
                })
            }

            // immer machen
            cancelDeleteButton.addEventListener("click", e => {
                    e.preventDefault();
                    confirmationModal.style.display = "none";
                })
        }

        function handleRestoreProcess() {
            const restoreIndex = lastSelectedArchiveIndex;
            const typeOfPlan = archivedPlanFields[lastSelectedArchiveIndex].querySelector(".trainingPlanType").textContent;

            
            const restoreDataOptionsContainer = document.getElementById("more-restore-data-container");
            const keepTrainingData = restoreDataOptionsContainer.querySelector("#keepTrainingData").value;
            const keepTrainingArchived = restoreDataOptionsContainer.querySelector("#keepTrainingArchived").value;

            const data = {
                restoreIndex,
                typeOfPlan,
                keepTrainingData,
                keepTrainingArchived
            }

            fetch('/training/restore-archived-training-plan', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
            .then(async response => {
                if (response.status === 200) {
                    confirmationModal.style.display = "none";
                    location.reload();
                } else if (response.status === 403) {
                    /// hier anzeigen dass die route für diese werte nicht erlaubt ist.
                    const errorResponse = await response.json();
                    handle403(errorResponse.error)
                }
            })
            .catch(error => {
                console.error("Fehler beim wiederherstellen:", error);
            })
        }

        function handle403(errorMessage) {

            // error Message anzeigen und den button ausblenden:
            confirmationModal.querySelector("input").value = errorMessage;

            //sobald man das modal ausblendet wird der erste button wieder angezeigt!
            confirmResetButton.addEventListener("click", e => {
                e.preventDefault();
                confirmationModal.querySelector("button").style.display = "block";
            })
        }

        function handleDeleteProcessFromArchive() {
            const deleteIndex = lastSelectedArchiveIndex;
            fetch('/training/delete-archived-training-plan', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ deleteIndex })
            })
            .then(response => {
                if (response.status === 200) {
                    confirmationModal.style.display = "none";
                } else if (response.status === 400) {
                    
                } else {

                }
            })
            .catch(error => {
                console.error("Fehler beim löschen:", error);
            })
            .finally(() => {
                location.reload();
            })
        }

    })
</script>