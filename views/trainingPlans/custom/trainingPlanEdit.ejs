<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Google fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Barlow+Condensed:wght@400;700&family=Bellefair&family=Barlow:wght@400;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="/stylesheets/shared/index.css">
    <link rel="stylesheet" href="/stylesheets/login.css">
    <link rel="manifest" href="/manifest/manifest.webmanifest">
    <title>Trainingsplan bearbeiten</title>
</head>

<body class="home">

    <form action="/training/custom-<%= templatePlanName %>-edit?_method=PATCH" method="POST">

        <input id="userID" type="hidden" name="userIdentification" value="<%= userID %>">

        <h3 class="text-white ff-serif fs-7 00 letter-spacing-1 uppercase">Bearbeiten</h3>

        <div class="save-status-sucess hidden ff-sans-serif fs-500 letter-spacing-4 text-accent"
            style="margin-top: 1em; text-align: center;">
            Daten erfolgreich gespeichert
        </div>
        <div class="save-status-failure hidden ff-sans-serif fs-500 letter-spacing-4 text-accent"
            style="margin-top: 1em; padding-left: 1em;">
            Fehler beim speichern der Daten
        </div>

        <label for="training_title" class="ff-sans-normal letter-spacing-4 text-accent fs-400">Titel</label>
        <input type="text" id="training-title" class="create-training-plan-input" name="training_title"
            value="<%= workoutName %>" required>

        <label for="training-mode-selector"
            class="ff-sans-normal letter-spacing-4 text-accent fs-400">Trainingsphase</label>
        <select name="training_phase" class="generic-selector" required>
            <option value="" disabled selected hidden></option>
            <option <%=trainingPhase==="hypertrophie" ? "selected" : "" %> value="hypertrophie">Hypertrophie</option>
            <option <%=trainingPhase==="kraft" ? "selected" : "" %> value="kraft">Kraft</option>
            <option <%=trainingPhase==="peaking" ? "selected" : "" %> value="peaking">Peaking</option>
        </select>

        <label for="training-mode-selector" class="ff-sans-normal letter-spacing-4 text-accent fs-400">Trainings /
            Woche</label>
        <select name="training_frequency" class="generic-selector" required>
            <option value="" disabled selected hidden></option>
            <option <%=trainingFrequency===3 ? "selected" : "" %> value="3">3</option>
            <option <%=trainingFrequency===4 ? "selected" : "" %> value="4">4</option>
            <option <%=trainingFrequency===5 ? "selected" : "" %> value="5">5</option>
            <option <%=trainingFrequency===6 ? "selected" : "" %> value="6">6</option>
        </select>


        <!--Später implementieren-->

        <!-- <label for="repeat-password" class="ff-sans-normal letter-spacing-4 text-accent fs-400">Blocklänge (Wochen)</label>
        <select name="training_weeks" class="generic-selector" required>
            <option value="" disabled selected hidden></option>
            <option <%= blockLength === 3 ? "selected" : "" %> value="3">3</option>
            <option <%= blockLength === 4 ? "selected" : "" %> value="4">4</option>
            <option <%= blockLength === 5 ? "selected" : "" %> value="5">5</option>
            <option <%= blockLength === 6 ? "selected" : "" %> value="6">6</option>
        </select> -->



        <button type="submit" class="form-button-2 uppercase">Save</button>
        </button>
        <button class="form-button uppercase fs-500" id="cancel-button" style="border: none;">Back</button>


    </form>

</body>

<%- include("../../partials/onlineStatus") %>
    <script src="/javascripts/displayOfflineData.js"></script>
    
    <script src="/javascripts/trainingPage/changeTitleAjax.js"></script>

  <!--   <script>

        document.addEventListener("DOMContentLoaded", () => {

            const backToTrainingPageBTN = document.querySelector(".form-button");
            backToTrainingPageBTN.addEventListener("click", e => {
                e.preventDefault();

                window.location.href = "/training";
            })

            const submitButton = document.querySelector(".form-button-2");

            submitButton.addEventListener("click", e => {

                e.preventDefault();
                form.dispatchEvent(new Event("submit"));
            })


            const form = document.querySelector("form");

            form.addEventListener("submit", async (event) => {

                const formData = new FormData(event.target);
                const formDataObject = {};

                formData.forEach((value, key) => {
                    formDataObject[key] = value;
                });

                try {
                    const response = await fetch(`${window.location.pathname}`, {
                        method: "PATCH",
                        body: JSON.stringify(formDataObject), // Sende das JSON-Objekt
                        headers: {
                            "Content-Type": "application/json", // Setze den Content-Type auf application/json
                        },
                    });

                    if (response.ok) {
                        console.log("GEPATCHED");
                        showMessage(".save-status-sucess", "Erfolgreich aktualisiert");

                    } else {
                        showMessage(".save-status-failure", "Fehler beim aktualisieren");
                    }
                } catch (err) {
                    console.error("Fehler beim aktualisieren", err);
                    showMessage(".save-status-failure", "Keine Internetverbindung deine Daten werden später aktualisiert!");
                }

            })

            function showMessage(element, message, success = true, duration = 5000) {
                const messageElement = document.querySelector(element);

                setTimeout(() => { //weicherer übergang damit animation zeit hat
                    messageElement.classList.remove("hidden");
                }, 250); // Verzögerung von 10 Millisekunden

                messageElement.textContent = message;

                setTimeout(() => {
                    messageElement.classList.add("hidden");
                    messageElement.textContent = "";
                }, duration);

                if (success) {
                    console.log(message);
                } else {
                    console.error(message);
                }
            }
        })



    </script> -->

</html>